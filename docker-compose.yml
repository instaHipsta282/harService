version: '2.1'
services:
  db:
    container_name: har_db
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres 2>&1 | grep \"accepting connections\" || exit 1"]
      interval: 10s
      timeout: 15s
      retries: 3
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - harService
  rabbitmq:
    container_name: har_rabbitmq
    image: rabbitmq:3-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_running 2>&1 | grep running || exit 1"]
      interval: 5s
      timeout: 15s
      retries: 3
    networks:
      - harService
  backend:
    container_name: har_backend
    image: instahipsta/har_service:1.0
    restart: always
    ports:
    - 8080:8080
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent localhost:8080/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 90s
      timeout: 5s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - harService

networks:
  harService: